<?xml version="1.0"?>
<launch>
	<!--Read data parameters from yaml file-->
	<rosparam command="load" file="$(find simulation_supervised)/config/data_param.yaml" />
  
  <arg name="world_name" default="esat_corridor/0000000000.world"/>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--use line for spawning world from .dae mesh in gz model folder-->
    <arg name="world_name" value="$(find simulation_supervised)/worlds/$(arg world_name)"/>
  	<arg name="gui" default="false"/>
    <arg name="headless" default="true"/> 
  </include>
	  
	<!-- Spawn simulated quadrotor uav -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="Yspawned" default="1.75"/>
  <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_with_cam_and_kinect.gazebo.xacro"/>
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="Y" default="$(arg Yspawned)"/>
  </include>

  <!-- start behavior arbitration -->
  <include file="$(find simulation_supervised_control)/launch/behaviorarbitration.launch"/>
  <!-- visualize the image raw topic-->
  <!--<node name="image_view" pkg="image_view" type="image_view" output="screen" args="image:=/front_cam/camera/image"/>-->


</launch>
