<?xml version="1.0"?>
<launch>


  <arg name="noise" default="none"/>
  <param name="noise" value="$(arg noise)"/>
  <param name="flight_duration" value="50"/>
  <param name="min_allowed_distance" value="0.6"/>
  
  <arg name="evaluate" default="false"/>
  <param name="evaluate" value="$(arg evaluate)"/>

  <arg name="world_name" default="$(find simulation_supervised_demo)/worlds/canyon.world"/>
  <param name="world_name" value="$(arg world_name)"/><!-- used by rosinterface to label runs -->
  

  <!-- TODO: include launch files up untill node level so we can give machine argument with node  -->

  <!-- <group> -->

    <!-- <arg name="gui" default="true"/> -->
    <arg name="gui" default="false"/>
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <!--use line for spawning world from .dae mesh in gz model folder-->
      <arg name="world_name" value="$(arg world_name)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="headless" default="true"/>
    </include>
      
    <!-- Spawn simulated quadrotor uav -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="Yspawned" default="1.57"/>
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch">
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_with_cam_and_kinect.gazebo.xacro" /> 
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>
      <arg name="Y" default="$(arg Yspawned)"/>
    </include>

    <!-- start behavior arbitration -->
    <arg name="starting_height" default="0.5"/>
    <arg name="speed" default="1.3"/>
    <include file="$(find simulation_supervised_control)/launch/behaviorarbitration.launch">
      <arg name="starting_height" value="$(arg starting_height)"/>
      <arg name="goal_angle" value="-1"/>
      <arg name="ba_params_file" value="behavior_arbitration_sandbox.xml"/>
      <arg name="speed" value="$(arg speed)"/>
    </include>

    <!-- start evaluation node -->
    <arg name="log_folder" default="$(find simulation_supervised_tools)/log"/>
    <include file="$(find simulation_supervised_tools)/launch/evaluate.launch">
      <arg name="starting_height" value="$(arg starting_height)"/>
      <arg name="log_folder" value="$(arg log_folder)"/> 
      <arg name="eva_dis" value="2000"/>
    </include>

    <!-- start create_data node -->
    <arg name="saving_location" default="$(find simulation_supervised_tools)/data"/>
    <include file="$(find create_dataset)/create_data.launch">
      <arg name="saving_location" value="$(arg saving_location)"/>
    </include>

    <arg name="graphics" default="true"/>
    <group if="$(arg graphics)">
      <!-- display control -->
      <node name="show_control" pkg="simulation_supervised_tools" type="show_control.py" output="log"/>
      <!-- display depth prediction -->
      <node name="show_depth_prediction" pkg="simulation_supervised_tools" type="show_depth_prediction.py" output="log"/>
    </group>

    <!-- display ground_truth -->
    <arg name="background" default="canyon.png"/>
    <param name="background" value="$(arg background)"/>
    <node name="gt_listener" pkg="simulation_supervised_tools" type="ground_truth_listener.py" output="screen"/>
  
  
  

</launch>
