<?xml version="1.0"?>
<launch>
  <!-- Define parameters from arguments -->
  <arg name="log_folder" default="tmp"/> <!-- logfolder defines where .pid file is saved for fsm to kill in ~/tensorflow/log-->
  <param name="log_folder" value="$(arg log_folder)"/>

  <arg name="evaluate" default="false"/> <!-- this parameter is used by rosinterface to ensure the evaluation model is used -->
  <param name="evaluate" value="$(arg evaluate)"/>

  <arg name="graphics" default="false"/> 
  <param name="graphics" value="$(arg graphics)"/>
  
  <arg name="data_location" default="tmp"/> <!-- used by create_dataset node to save all recorded data -->
  <param name="data_location" value="$(arg data_location)"/>
  
  <arg name="save_images" default="false"/>
  <param name="save_images" value="$(arg save_images)"/>
  
  <arg name="full" default="false"/>
  <group if="$(arg full)">
    <!-- Load parameters for turtlesim as a full demonstration-->
    <include file="$(find simulation_supervised)/launch/load_params.launch">
      <arg name="robot_config" value="drone_real.yaml"/>
    </include>
  </group>
  
  <!-- start node for comunication with bebop -->
  <include file="$(find bebop_driver)/launch/bebop_node.launch"/>

  <!-- Load parameters for fsm-->
  <arg name="fsm_config" default="console_fsm"/>
  <rosparam command="load" file="$(find simulation_supervised)/config/fsm/$(arg fsm_config).yaml"/> 
  
  <!-- FSM node -->
  <node name="fsm" pkg="simulation_supervised_tools" type="fsm.py" output="screen"/>

  <!-- KeyBoard node -->
  <node name="teleop_twist_keyboard" pkg="simulation_supervised_tools" type="teleop_twist_keyboard.py" output="screen"/>

  <!-- Create data -->
  <node name="create_dataset" pkg="simulation_supervised_tools" type="create_dataset.py" output="screen"/>

  <!-- Keep position by listening to gt_info-topic -->
  <node name="ground_truth_listener" pkg="simulation_supervised_tools" type="ground_truth_listener.py" output="screen"/>


  <!-- display control and depth predictions-->
  <group if="$(arg graphics)">
    <!-- display control -->
    <node name="show_control" pkg="simulation_supervised_tools" type="show_control.py" output="screen"/>
  </group>

</launch>
